import java.util.List;


public class Analysis {
	float originalSize = 0;
	float huffmanSize = 0;
	float extHuffmanSize = 0;
	float entropy = 0;
	float HuffAvgLength = 0;
	float extHuffAvgLength = 0;
	
	public void calculateOriginalSize(List<Symbol> input) {
		int size = 0;
		
		for (Symbol i : input) {
			size = size + (8 * i.frequency);
		}
		
		System.out.println("SIZE: "+size+" bits");
		originalSize = size;
	}
	
	public void calculateHuffmanSize(List<Symbol> huffmanList) {
		int size = 0;
		
		for (Symbol i : huffmanList) {
			size = size + (i.frequency * i.code.length());
		}
		
		System.out.println("SIZE: "+size+" bits");
		huffmanSize = size;
	}
	
	public void calculateExtHuffmanSize(String code) {
		int size;
		
		size = code.length();
		System.out.println("SIZE: "+size+" bits");
		extHuffmanSize = size;
	}
	
	public void calculateEntropy(List<Symbol> list) {
		
		double H = 0;	// Entropy
		
		for (Symbol i : list) {
			H = H + (i.probability * (Math.log(i.probability) / Math.log(2)));
		}
		
		H = -H;
		
		System.out.println("Entropy: "+H);
		entropy = (float)H;
	}
	
	/*
	 * Calculate the Average Length of the codes
	 * 
	 * 		l = sum(codeLength * probability)
	 */
	public void averageLengths(List<Symbol> list) {
		float length = 0;
		
		for (Symbol i : list) {
			length = length + (i.code.length() * i.probability);
		}
		
		System.out.println("Average length: "+length);
		
		HuffAvgLength = length;
	}
	
	/*
	 * Calculate the Average Length of the codes
	 * 		The unique difference between the other functions is a division by 2
	 */
	public void averageExtLengths(List<Symbol> list) {
		float length = 0;
		
		for (Symbol i : list) {
			length = length + (i.code.length() * i.probability);
		}
		
		length = length / 2;
		
		System.out.println("Average length: "+length);
	}
	
	/*
	 * Calculate saving bits and its percentage in Huffman
	 */
	public void savingBitsHuff() {
		float saving;
		float percentage;
		
		saving = originalSize - huffmanSize;
		percentage = 100 * (saving / originalSize);
		
		System.out.println("Saving bits: "+saving+" ("+percentage+"%)");
	}
	
	/*
	 * Calculate saving bits and its percentage in Extended Huffman
	 */
	public void savingBitsExtHuff() {
		float saving;
		float percentage;
		
		saving = originalSize - extHuffmanSize;
		percentage = 100 * (saving / originalSize);
		
		System.out.println("Saving bits: "+saving+" ("+percentage+"%)");
	}
}
